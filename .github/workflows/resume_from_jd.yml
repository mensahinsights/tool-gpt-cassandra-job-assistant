name: Generate Resume from JD

on:
  push:
    paths:
      - 'runs/**/inputs/jd.md'
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate Resume(s)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "[DEBUG] Scanning for jd.md files..."
          found=0
          latest_jd=""
          latest_key=""
          
          # Find the most recent JD file by folder name + path (handles same-date folders)
          for jd in $(find runs -type f -path "*/inputs/jd.md" | sort); do
            found=1
            folder_path=$(dirname $(dirname "$jd"))
            folder_name=$(basename "$folder_path")
            # Use full folder path as sort key to handle same dates
            sort_key="${folder_name}_${folder_path}"
            echo "[DEBUG] Found JD: $jd (key: $sort_key)"
            
            if [[ "$sort_key" > "$latest_key" ]]; then
              latest_key="$sort_key"
              latest_jd="$jd"
            fi
          done
          
          if [ $found -eq 0 ]; then
            echo "[WARN] No jd.md files found under runs/**/inputs/"
            exit 0
          fi
          
          echo "[DEBUG] Processing most recent JD: $latest_jd (key: $latest_key)"
          python scripts/generate_resume_from_jd.py "$latest_jd"

      - name: Debug outputs directory
        run: |
          echo "[DEBUG] Listing outputs folder contents:"
          ls -R runs || true

      - name: Upload resume artifacts
        uses: actions/upload-artifact@v4
        with:
          name: resumes
          path: runs/**/outputs/*

      - name: Commit Outputs
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "github-actions"
          git add runs/**/outputs/* || true
          git commit -m "Add generated resumes" || echo "[DEBUG] No new resumes to commit"
          git push || echo "[DEBUG] Nothing new to push"

      - name: Update Google Sheet
        if: success()
        env:
          GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: |
          echo "[DEBUG] Finding and updating with latest result.json"
          python scripts/update_sheet.py